/**
 * slotlist.info API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0-beta32
 * Contact: nick@slotlist.info
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { MissionServerInfo } from './missionServerInfo';
import { Model42 } from './model42';
import { RequiredDLCs } from './requiredDLCs';


export interface Model43 {
    /**
     * Title of the mission
     */
    title: string;
    /**
     * Slug used for uniquely identifying a mission in the frontend, easier to read than a UUID
     */
    slug: string;
    /**
     * Short description and summary of mission
     */
    description: string;
    /**
     * Full, detailed description of the mission. Can contain HTML for formatting
     */
    detailedDescription: string;
    /**
     * Collapsed description of the mission, can be `null` if not applicable. Can contain HTML for formatting
     */
    collapsedDescription?: string;
    /**
     * Date and time the mission briefing starts, in UTC. The briefing usually only includes players with leadership roles
     */
    briefingTime: string;
    /**
     * Date and time the mission slotting starts, in UTC. Players are encouraged to join the server and choose their reserved slot at this time
     */
    slottingTime: string;
    /**
     * Date and time the missions starts (slotting/briefing times are stored separately and available via mission details)
     */
    startTime: string;
    /**
     * Estimated date and time the missions ends, in UTC. Must be equal to or after `startTime`, just an estimation by the mission creator. The actual end time might vary
     */
    endTime: string;
    /**
     * Information regarding any technical support provided before the mission, can be `null` if not provided. Can contain HTML for formatting
     */
    techSupport?: string;
    /**
     * Additional ruleset for this mission, can be `null` if not applicable. Can contain HTML for formatting
     */
    rules?: string;
    gameServer?: MissionServerInfo;
    voiceComms?: MissionServerInfo;
    repositories?: Model42;
    /**
     * Sets the visibility setting of a mission. Missions with `public` visibility are visible to everyone, `hidden` missions are only visible to the mission creator and assigned mission editors. The `community` visibility makes the mission visible to all members of the mission creator's community. The `private` visibility setting restricts access to selected users, although this functionality is currently not implemented yet (as of 2017-08-23)
     */
    visibility?: Model43.VisibilityEnum;
    /**
     * Indicates whether slots in the mission are auto-assignable. Auto-assignable slots do not require confirmation by a mission editor, but are automatically assigned to the first registering user (who would have thought, what a good name choice!)
     */
    slotsAutoAssignable: boolean;
    requiredDLCs: RequiredDLCs;
    /**
     * Indicates whether the mission should also be associated with the user's community (if set), defaults to true
     */
    addToCommunity?: boolean;
}
export namespace Model43 {
    export type VisibilityEnum = 'community' | 'hidden' | 'private' | 'public';
    export const VisibilityEnum = {
        Community: 'community' as VisibilityEnum,
        Hidden: 'hidden' as VisibilityEnum,
        Private: 'private' as VisibilityEnum,
        Public: 'public' as VisibilityEnum
    }
}
